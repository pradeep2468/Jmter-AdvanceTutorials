HLS Protocol :
This provides a reliable, cost-effective means of delivering continuous and long-form video over the Internet.
It allows a receiver to adapt the bitrate of the media to the current network conditions, in order to maintain uninterrupted playback at the best possible quality.
 
In a HTTP Live Streaming process:
	The audio/video to be streamed is reproduced by a media encoder at different quality levels, bitrates and resolutions. Each version is called a variant.
	The different variants are split up into smaller Media Segment Files.
	The encoder creates a Media Playlist for each variant with the URLs of each Media Segment.
	The encoder creates a Master Playlist File with the URLs of each Media Playlist.

To play: The client first downloads the Master Playlist, then the Media Playlists and then they play each Media Segment declared within the chosen Media Playlist. The client can reload the Playlist to discover any added segments. This is needed in cases of live events.

For example: Playlist files must be encoded in UTF-8. The format of the Playlist files is derived from the M3U playlist file format. Each Playlist file must be identifiable by either the path component of its URL or by HTTP Content-Type. In the first case, the path must end with either .m3u8 or .m3u. In the second, the HTTP Content-type must be "application/vnd.apple.mpegurl" or "audio/mpegurl".

The HLS Plugin for JMeter : 
The new HLS plugin for JMeter allows users to simulate a HLS scenario by using only one custom Sampler. Now, you don’t need multiple HTTP Request Samplers, ForEach Controllers or RegEx PostProcessors. This makes the whole process much simpler than before.
Instead, the complete logic is seamlessly encapsulated so you only have to care about the use case: the media type, playback time and network conditions. That’s it! The plugin is brand new and it can be installed via the JMeter Plugins Manager.

Steps : To create your test
1.	Install the HLS plugin from the Plugins Manager
2.	Create a Thread Group.
3.	Add the HLS Sampler i.e Right click ThreadGroup -> Add -> Sampler -> HLS Sampler
	After that you can add assertions, listeners, etc.
Video Options :
4.	Set the link to the master playlist file at URL 
5.	Set the video type corresponding to the playlist i.e VOD,Live Stream & Event Stream
Play Options :
6.	Set the playback time of the test: Whole video or Video duration(seconds)
Network options :
7.	Select the protocol of the playlist you want to test. You can identify it in the link to the master playlist file: http or https
8.	Select the bandwidth you want to simulate in your test. If there is only one playlist for the selected bandwidth, the plugin will select the playlist based only on this criterion i.e Custom Bandwidth (bits/s), Min bandwidth available or Max bandwidth available
Resolution :
9.	After selecting the desired bandwidth you can select a resolution to simulate your specific device.
Results :
10.	You can set listeners to evaluate the results of your tests. The View Results Tree Listener displays the HLS Hierarchy, so you can inspect how the requests and responses worked.

This is the most easiest way to load test HLS using JMeter.

References :
Using HLS sampler: 
https://www.blazemeter.com/blog/the-new-hls-plugin-for-jmeter-the-complete-guide
Using HTTP,RegEx & For-Loop :
http://www.tothenew.com/blog/load-testing-hls-stream-using-jmeter/
https://www.youtube.com/watch?v=q_pMq_U0ng8
https://www.blazemeter.com/blog/how-load-test-http-live-media-streaming-hls-jmeter

	